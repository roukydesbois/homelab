#!/bin/bash

# Ansible Vault Setup Helper for NTFY Credentials
# This script helps you set up encrypted credential storage for ntfy notifications

set -e

SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
VAULT_FILE="$SCRIPT_DIR/group_vars/all_vault.yml"
EXAMPLE_FILE="$SCRIPT_DIR/group_vars/all_vault.yml.example"

echo "NTFY Ansible Vault Setup Helper"
echo "================================"
echo

# Check if vault file already exists
if [[ -f "$VAULT_FILE" ]]; then
    echo "⚠️  Vault file already exists at: $VAULT_FILE"
    echo "   Choose an option:"
    echo "   [e] Edit existing vault file"
    echo "   [r] Recreate vault file (WARNING: This will delete existing data!)"
    echo "   [q] Quit"
    read -p "Enter your choice [e/r/q]: " choice

    case $choice in
        e|E)
            echo "Opening existing vault file for editing..."
            ansible-vault edit "$VAULT_FILE"
            exit 0
            ;;
        r|R)
            read -p "Are you sure you want to delete and recreate the vault? [y/N]: " confirm
            if [[ $confirm != [yY] ]]; then
                echo "Operation cancelled."
                exit 0
            fi
            rm "$VAULT_FILE"
            ;;
        q|Q)
            echo "Exiting..."
            exit 0
            ;;
        *)
            echo "Invalid choice. Exiting..."
            exit 1
            ;;
    esac
fi

# Check if ansible-vault is available
if ! command -v ansible-vault &> /dev/null; then
    echo "❌ Error: ansible-vault command not found."
    echo "   Please install Ansible first:"
    echo "   pip install ansible"
    exit 1
fi

# Create group_vars directory if it doesn't exist
mkdir -p "$SCRIPT_DIR/group_vars"

echo "Setting up new encrypted vault file..."
echo

# Get authentication method preference
echo "Choose authentication method:"
echo "1. Token-based authentication (recommended)"
echo "2. Username/password authentication"
echo "3. Both methods"
read -p "Enter your choice [1-3]: " auth_method

# Get NTFY server details
read -p "Enter your NTFY server URL (e.g., https://ntfy.example.com): " ntfy_url
read -p "Enter your topic name (e.g., homelab-updates): " topic_name

# Initialize vault content
cat > /tmp/vault_template.yml << EOF
---
# NTFY Server Authentication Credentials
# Generated by setup-vault.sh on $(date)

# Server configuration
vault_ntfy_url: "$ntfy_url"
vault_ntfy_topic: "$topic_name"

EOF

case $auth_method in
    1)
        read -p "Enter your NTFY access token (tk_...): " ntfy_token
        cat >> /tmp/vault_template.yml << EOF
# Token-based authentication
vault_ntfy_token: "$ntfy_token"
EOF
        ;;
    2)
        read -p "Enter your NTFY username: " ntfy_username
        read -s -p "Enter your NTFY password: " ntfy_password
        echo
        cat >> /tmp/vault_template.yml << EOF
# Username/password authentication
vault_ntfy_username: "$ntfy_username"
vault_ntfy_password: "$ntfy_password"
EOF
        ;;
    3)
        read -p "Enter your NTFY username: " ntfy_username
        read -s -p "Enter your NTFY password: " ntfy_password
        echo
        read -p "Enter your NTFY access token (tk_...): " ntfy_token
        cat >> /tmp/vault_template.yml << EOF
# Username/password authentication
vault_ntfy_username: "$ntfy_username"
vault_ntfy_password: "$ntfy_password"

# Token-based authentication
vault_ntfy_token: "$ntfy_token"
EOF
        ;;
    *)
        echo "Invalid choice. Exiting..."
        rm /tmp/vault_template.yml
        exit 1
        ;;
esac

# Add environment-specific examples
cat >> /tmp/vault_template.yml << EOF

# Optional: Environment-specific configurations
# Uncomment and modify as needed:
# vault_ntfy_prod_url: "https://ntfy-prod.example.com"
# vault_ntfy_prod_token: "tk_production_token"
# vault_ntfy_dev_url: "https://ntfy-dev.example.com"
# vault_ntfy_dev_token: "tk_development_token"
EOF

echo
echo "Creating encrypted vault file..."
echo "You will be prompted to enter a vault password (remember this!):"
echo

# Create encrypted vault
ansible-vault encrypt /tmp/vault_template.yml --output="$VAULT_FILE"

if [[ $? -eq 0 ]]; then
    echo "✅ Vault file created successfully at: $VAULT_FILE"
    echo
    echo "Next steps:"
    echo "1. Update your group_vars/all.yml to reference vault variables:"
    echo "   ntfy_server_url: \"{{ vault_ntfy_url }}\""
    echo "   ntfy_topic: \"{{ vault_ntfy_topic }}\""

    case $auth_method in
        1|3)
            echo "   ntfy_token: \"{{ vault_ntfy_token }}\""
            ;;
    esac

    case $auth_method in
        2|3)
            echo "   ntfy_username: \"{{ vault_ntfy_username }}\""
            echo "   ntfy_password: \"{{ vault_ntfy_password }}\""
            ;;
    esac

    echo
    echo "2. Run playbooks with vault password:"
    echo "   ansible-playbook -i inventory.yml server-management/update-servers.yml --ask-vault-pass"
    echo
    echo "3. To edit the vault later:"
    echo "   ansible-vault edit $VAULT_FILE"
    echo
    echo "4. To view the vault contents:"
    echo "   ansible-vault view $VAULT_FILE"
else
    echo "❌ Failed to create vault file."
    rm /tmp/vault_template.yml
    exit 1
fi

# Clean up temporary file
rm /tmp/vault_template.yml

echo "🔐 Vault setup complete!"
