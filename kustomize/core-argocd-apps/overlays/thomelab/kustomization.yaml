apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization
resources:
  - minio-creds-sealed-secret.yaml
  - sealed-tailscale-oauth.yaml
  - sealed-velero-creds.yaml
  - notif-webhook-info-sealed.yaml
  - ../../base

patches:
  - patch: |-
      - op: add
        path: /spec/source/helm/valuesObject/ingress
        value:
          enabled: true
          ingressClassName: tailscale
          host: thomelab-longhorn
          tls: true
      - op: add
        path: /spec/source/helm/valuesObject/defaultBackupStore
        value:
          backupTarget: s3://longhorn-backup@us-west-1/
          backupTargetCredentialSecret: minio-creds
    target:
      group: argoproj.io
      version: v1alpha1
      kind: Application
      name: longhorn
      namespace: argocd
  - patch: |-
      - op: add
        path: /spec/source/helm/valuesObject/operatorConfig
        value:
          hostname: thomelab-operator
    target:
      group: argoproj.io
      version: v1alpha1
      kind: Application
      name: tailscale-operator
      namespace: argocd
  - patch: |-
      - op: add
        path: /spec/source/helm
        value:
          valuesObject:
            global:
              domain: thomelab-argocd.tail9a43.ts.net
      - op: add
        path: /spec/source/helm/valuesObject/configs
        value:
          params:
            server.insecure: true
            application.namespaces: "keycloak,immich,thomflix"
      - op: add
        path: /spec/source/helm/valuesObject/server
        value:
          ingress:
            enabled: true
            ingressClassName: tailscale
            hostname: thomelab-argocd
            extraTls:
              - hosts:
                - thomelab-argocd
      - op: add
        path: /spec/source/helm/valuesObject/notifications
        value:
          extraEnvFrom:
            - secretRef:
                name: notif-webhook-info
          secret:
            items:
              service.webhook.ntfy: |
                url: $WEBHOOK_URL
                headers:
                  - name: Content-Type
                    value: application/json
                basicAuth:
                  username: $WEBHOOK_USER
                  password: $WEBHOOK_PASSWORD
          subscriptions:
            - recipients:
              - ntfy
              triggers:
              - on-sync-succeeded
              - on-sync-failed
              - on-health-degraded
          triggers:
            trigger.on-deployed: |
              - description: Application is synced and healthy. Triggered once per commit.
                oncePer: app.status.sync.revision
                send:
                - app-deployed
                when: app.status.operationState.phase in ['Succeeded'] and app.status.health.status == 'Healthy'
            trigger.on-health-degraded: |
              - description: Application has degraded
                send:
                - app-health-degraded
                when: app.status.health.status == 'Degraded'
            trigger.on-sync-failed: |
              - description: Application syncing has failed
                send:
                - app-sync-failed
                when: app.status.operationState.phase in ['Error', 'Failed']
            trigger.on-sync-running: |
              - description: Application is being synced
                send:
                - app-sync-running
                when: app.status.operationState.phase in ['Running']
            trigger.on-sync-status-unknown: |
              - description: Application status is 'Unknown'
                send:
                - app-sync-status-unknown
                when: app.status.sync.status == 'Unknown'
            trigger.on-sync-succeeded: |
              - description: Application syncing has succeeded
                send:
                - app-sync-succeeded
                when: app.status.operationState.phase in ['Succeeded']
           
            defaultTriggers: |
              - on-sync-status-unknown
    target:
      group: argoproj.io
      version: v1alpha1
      kind: Application
      name: argocd
      namespace: argocd
  - patch: |-
      - op: add
        path: /spec/source/helm
        value:
          valuesObject:
            initContainers:
            - name: velero-plugin-for-aws
              image: velero/velero-plugin-for-aws:v1.10.0
              imagePullPolicy: IfNotPresent
              volumeMounts:
                - mountPath: /target
                  name: plugins
            configuration:
              backupStorageLocation:
              - name: default
                provider: aws
                bucket: thomelab-velero
                config:
                  region: us-east-1
                  s3ForcePathStyle: "true"
                  s3Url: http://192.168.100.210:9000
              volumeSnapshotLocation: 
              - name: default
                provider: aws
                config:
                  region: us-east-1
              features: EnableCSI
            credentials:
              useSecret: true
              existingSecret: velero
            schedules:
              basebackup:
                disabled: false
                labels:
                  scheduled-backup: base
                annotations:
                  scheduled-backup: base
                schedule: "0 0 * * *"
                template:
                  ttl: "240h"
                  storageLocation: default
                  includedNamespaces:
                    - keycloak
                    - immich
    target:
      group: argoproj.io
      version: v1alpha1
      kind: Application
      name: velero
      namespace: argocd
