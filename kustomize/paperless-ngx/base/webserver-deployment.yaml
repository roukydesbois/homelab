apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose.yml
    kompose.version: 1.37.0 (HEAD)
  labels:
    io.kompose.service: webserver
  name: webserver
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: webserver
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yml
        kompose.version: 1.37.0 (HEAD)
      labels:
        io.kompose.service: webserver
    spec:
      containers:
        - env:
            - name: PAPERLESS_DBHOST
              value: db
            - name: PAPERLESS_REDIS
              value: redis://broker:6379
            - name: PAPERLESS_TIKA_ENABLED
              value: "1"
            - name: PAPERLESS_TIKA_ENDPOINT
              value: http://tika:9998
            - name: PAPERLESS_TIKA_GOTENBERG_ENDPOINT
              value: http://gotenberg:3000
          # envFrom:
          #   - configMapRef:
          #       name: docker-compose-env
          image: ghcr.io/paperless-ngx/paperless-ngx:latest
          name: webserver
          ports:
            - containerPort: 8000
              protocol: TCP
          volumeMounts:
            - mountPath: /usr/src/paperless/data
              name: data
            - mountPath: /usr/src/paperless/media
              name: media
            - mountPath: /usr/src/paperless/export
              name: export
            - mountPath: /usr/src/paperless/consume
              name: consume
      restartPolicy: Always
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: data
        - name: media
          persistentVolumeClaim:
            claimName: media
        - name: export
          persistentVolumeClaim:
            claimName: export
        - name: consume
          persistentVolumeClaim:
            claimName: consume
